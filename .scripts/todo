#!/bin/bash

if [[ "$1" == "l" || "$1" == "list" ]]; then
    TODO_LIST=$(todoist l)
    TODO_COUNT=$(echo "$TODO_LIST" | wc -l)
    TODO_SEP=" -- "
    clear
    echo "List TODOs "
    echo ---------------------------------------------
    echo "ID - PRI - INSIDE ---  TASK"
    for (( SECTION=1 ; SECTION<=TODO_COUNT ; SECTION++ )); do
        printf '%s' "$SECTION"
        printf '%s' "$TODO_SEP"
        TODO_REST=$(printf '%s' "$TODO_LIST" | awk 'NR=='"$SECTION"' {printf $0}')
        TEM=$(printf '%s' "$TODO_REST" | awk '{printf $2}')
        colorize red "$TEM"
        printf '%s' "$TODO_SEP"
        TEM=$(printf '%s' "$TODO_REST" | awk '{printf $3}')
        colorize purple "$TEM"
        printf '%s' "$TODO_SEP"
        colorize blue "${TODO_REST#*Inbox}"
        echo;
    done
    echo;

elif [[ "$1" == "show" || "$1" == "info" ]]; then
    TODO_LIST=$(todoist l)
    TODO_COUNT=$(echo "$TODO_LIST" | wc -l)
    [[ -z "$2" || "$2" -gt "$TODO_COUNT" ]] && echo "Read the help dude." && exit
    TODO_TOKEN=$(printf '%s' "$TODO_LIST" | awk 'NR=='"$2"' {printf $1}')
    echo "Showing info of task $2"
    echo ---------------------------------------------
    todoist --color --indent --namespace show "$TODO_TOKEN"
    echo;

elif [[ "$1" == "completed-list" || "$1" == "c-l" || "$1" == "cl" ]]; then
    echo "Showing completed tasks"
    echo ---------------------------------------------
    todoist --color --indent --namespace cl
    echo;

elif [[ "$1" == "add" || "$1" == "a" ]]; then
    [[ -z "$2" ]] && echo "Read the help dude." && exit
    echo "Adding new task: $2"
    todoist --color --indent --namespace a "$2"
    echo "Done!"
    echo;

elif [[ "$1" == "close" || "$1" == "c" ]]; then
    TODO_LIST=$(todoist l)
    TODO_COUNT=$(echo "$TODO_LIST" | wc -l)
    [[ -z "$2" || "$2" -gt "$TODO_COUNT" ]] && echo "Read the help dude." && exit
    TODO_TOKEN=$(printf '%s' "$TODO_LIST" | awk 'NR=='"$2"' {printf $1}')
    echo "Competed task: $2"
    todoist --color --indent --namespace c "$TODO_TOKEN"
    echo "Done!"
    echo;

elif [[ "$1" == "delete" || "$1" == "d" ]]; then
    TODO_LIST=$(todoist l)
    TODO_COUNT=$(echo "$TODO_LIST" | wc -l)
    [[ -z "$2" || "$2" -gt "$TODO_COUNT" ]] && echo "Read the help dude." && exit
    TODO_TOKEN=$(printf '%s' "$TODO_LIST" | awk 'NR=='"$2"' {printf $1}')
    echo "Deleting task: $2"
    todoist --color --indent --namespace d "$TODO_TOKEN"
    echo "Done!"
    echo;

elif [[ "$1" == "labels" ]]; then
    echo "Show labels"
    echo ---------------------------
    todoist --color --indent --namespace labels
    echo;

elif [[ "$1" == "projects" ]]; then
    echo "Show projects"
    echo ---------------------------
    todoist --color --indent --namespace projects
    echo;

elif [[ "$1" == "sync" || "$1" == "s" ]]; then
    echo "Syncing..."
    todoist sync
    echo "Done!"
    echo;

elif [[ -z $1 || $1 == "help" || $1 == "--help" || $1 == "h" ]]; then
    echo --------------------------------------------------------
    echo "NAME:"   
    echo -e "\t todo - Written in one night Todoist CLI Client front end\n"
    echo "USAGE:"
    echo -e "\ttodo [global options] command [command options]\n"
    echo "COMMANDS:"
    echo -e "\tlist, l                  Show all tasks"
    echo -e "\tshow, info               Show task detail"
    echo -e "\tcompleted-list, c-l, cl  Show all completed tasks"
    echo -e "\tadd, a                   Add task"
    echo -e "\tclose, c                 Close task"
    echo -e "\tdelete, d                Delete task"
    echo -e "\tlabels                   Show all labels"
    echo -e "\tprojects                 Show all projects"
    echo -e "\tsync, s                  Sync cache\n"
    echo "Made possible by Arvo"
    echo;

else
    echo "Do not mess with the todo list script."
fi

exit     
